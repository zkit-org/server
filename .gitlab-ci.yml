stages:
    - package
    - deploy

package-account:
    stage: package
    only:
        - /^account-.*$/
    tags:
        - dev
    script:
        - java -version
        - mvn -v
        - mvn install -Dmaven.test.skip=true
        - cd $CI_PROJECT_DIR/server-account/server-account-api
        - echo $NEXUS_USERNAME
        - echo $NEXUS_PASSWORD
        - mvn clean deploy -U -s $CI_PROJECT_DIR/settings.xml -Dmaven.test.skip=true
        - cd $CI_PROJECT_DIR/server-account/server-account-service
        - mvn clean package -U -s $CI_PROJECT_DIR/settings.xml -Dmaven.test.skip=true
        - echo "$DOCKER_TOKEN" | docker login -u $DOCKER_USER --password-stdin $CI_REGISTRY
        - docker build -t $CI_REGISTRY/easy-kit-dev/server/account:$CI_PIPELINE_ID -f ./Dockerfile .
        - docker tag $CI_REGISTRY/easy-kit-dev/server/account:$CI_PIPELINE_ID $CI_REGISTRY/easy-kit-dev/server/account:latest
        - docker push $CI_REGISTRY/easy-kit-dev/server/account:$CI_PIPELINE_ID
        - docker push $CI_REGISTRY/easy-kit-dev/server/account:latest
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/account:$CI_PIPELINE_ID
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/account:latest

package-message:
    stage: package
    only:
        - /^message-.*$/
    tags:
        - dev
    script:
        - java -version
        - mvn -v
        - mvn install -Dmaven.test.skip=true
        - cd server-message/server-message-api
        - mvn clean deploy -U -s ../../settings.xml -Dmaven.test.skip=true
        - cd ../../server-message/server-message-service
        - mvn clean package -U -s ../../settings.xml -Dmaven.test.skip=true
        - echo "$DOCKER_TOKEN" | docker login -u $DOCKER_USER --password-stdin $CI_REGISTRY
        - docker build -t $CI_REGISTRY/easy-kit-dev/server/message:$CI_PIPELINE_ID -f ./Dockerfile .
        - docker tag $CI_REGISTRY/easy-kit-dev/server/message:$CI_PIPELINE_ID $CI_REGISTRY/easy-kit-dev/server/message:latest
        - docker push $CI_REGISTRY/easy-kit-dev/server/message:$CI_PIPELINE_ID
        - docker push $CI_REGISTRY/easy-kit-dev/server/message:latest
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/message:$CI_PIPELINE_ID
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/message:latest

package-ai:
    stage: package
    only:
        - /^ai-.*$/
    tags:
        - dev
    script:
        - java -version
        - mvn -v
        - mvn install -Dmaven.test.skip=true
        - cd server-ai/server-ai-api
        - mvn clean deploy -U -s ../../settings.xml -Dmaven.test.skip=true
        - cd ../../server-ai/server-ai-service
        - mvn clean package -U -s ../../settings.xml -Dmaven.test.skip=true
        - echo "$DOCKER_TOKEN" | docker login -u $DOCKER_USER --password-stdin $CI_REGISTRY
        - docker build -t $CI_REGISTRY/easy-kit-dev/server/ai:$CI_PIPELINE_ID -f ./Dockerfile .
        - docker tag $CI_REGISTRY/easy-kit-dev/server/ai:$CI_PIPELINE_ID $CI_REGISTRY/easy-kit-dev/server/ai:latest
        - docker push $CI_REGISTRY/easy-kit-dev/server/ai:$CI_PIPELINE_ID
        - docker push $CI_REGISTRY/easy-kit-dev/server/ai:latest
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/ai:$CI_PIPELINE_ID
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/ai:latest

package-assets:
    stage: package
    only:
        - /^assets-.*$/
    tags:
        - dev
    script:
        - java -version
        - mvn -v
        - mvn install -Dmaven.test.skip=true
        - cd $CI_PROJECT_DIR/server-assets/server-assets-api
        - mvn clean deploy -U -s $CI_PROJECT_DIR/settings.xml -Dmaven.test.skip=true
        - cd $CI_PROJECT_DIR/server-assets/server-assets-service
        - mvn clean package -U -s $CI_PROJECT_DIR/settings.xml -Dmaven.test.skip=true
        - echo "$DOCKER_TOKEN" | docker login -u $DOCKER_USER --password-stdin $CI_REGISTRY
        - docker build -t $CI_REGISTRY/easy-kit-dev/server/assets:$CI_PIPELINE_ID -f ./Dockerfile .
        - docker tag $CI_REGISTRY/easy-kit-dev/server/assets:$CI_PIPELINE_ID $CI_REGISTRY/easy-kit-dev/server/assets:latest
        - docker push $CI_REGISTRY/easy-kit-dev/server/assets:$CI_PIPELINE_ID
        - docker push $CI_REGISTRY/easy-kit-dev/server/assets:latest
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/assets:$CI_PIPELINE_ID
        - docker rmi $CI_REGISTRY/easy-kit-dev/server/assets:latest

deploy-account:
    stage: deploy
    only:
        - /^account-.*$/
    tags:
        - dev
    script:
        - cd ~/server/clover/server-account
        - docker compose down
        - docker compose up -d

deploy-message:
    stage: deploy
    only:
        - /^message-.*$/
    tags:
        - dev
    script:
        - cd ~/server/clover/server-message
        - docker compose down
        - docker compose up -d

deploy-ai:
    stage: deploy
    only:
        - /^ai-.*$/
    tags:
        - dev
    script:
        - cd ~/server/clover/server-ai
        - docker compose down
        - docker compose up -d

deploy-assets:
    stage: deploy
    only:
        - /^assets-.*$/
    tags:
        - dev
    script:
        - cd ~/server/clover/server-assets
        - docker compose down
        - docker compose up -d
